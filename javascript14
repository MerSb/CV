let unObjeto = [{ "a": "algo", "b": "algo nuevo" }, { "a": "algo 2", "b": "algo nuevo 2" }]
console.log(unObjeto[0].a);
console.log(typeof unObjeto);
console.log(unObjeto);

let unJson = JSON.stringify(unObjeto);
console.log(unJson);
console.log(unJson[0].a); // No funciona
console.log(typeof unJson);

let unObjetoDeserializado = JSON.parse(unJson);
console.log(unObjetoDeserializado[0].a);
console.log(typeof unObjetoDeserializado);
console.log(unObjetoDeserializado);


function recuperarDatosDelStorage() {
    // Obtenemos el usuario del 'localStorage' en formato JSON
    // (tal como lo guardamos en clase 13)
    let usuarioJson;
    if(localStorage.getItem('USER') == null) {
        usuarioJson = '{"USER": "No hay datos"}';
    } else { 

        usuarioJson = localStorage.getItem('USER');

    }

    // if (usuarioJson == null) {
    //     window.location.href = "./index.html";
    // }

    // Convertimos el JSON a un objeto (lo deserializo)
    const usuario = JSON.parse(usuarioJson);

    // Devolvemos el objeto
    return usuario;
}

function mostrarDatosUsuario(usuario) {
    // usuario es un objeto
    console.log(usuario);
    console.log(usuario.email);

    // capturamos los nodos
    const email = document.querySelector('#email');
    const perfil = document.querySelector('#perfil');

    // pintamos las propiedades del objeto en pantalla
    if (usuario.rol != null && usuario.rol != null){
        email.innerText = usuario.email;
        perfil.innerText = usuario.rol;

    }

}


/* ----------------------------- MESA DE TRABAJO ---------------------------- */
/* -------------------------------------------------------------------------- */
/*                     [9] FUNCION: Boton de cerrar sesion                    */
/* -------------------------------------------------------------------------- */
// Ahora vamos a crear elementos en el DOM dinamicamente y le asignaremos a esos elementos la escucha de eventos.
// ‚òù La funcion debe ser ejecutada al final del evento Load.
// La idea es crear un boton para cerrar sesi√≥n. Entonces necesitamos cumplir los siguientes puntos:
// 1- Crear un elemento <button>
// 2- Que ese bot√≥n tenga el texto "Cerrar sesi√≥n"
// 3- El boton tiene que tener ciertos estilos:
//     - padding arriba y abajo de 5px y a los costados 20px
//     - color de fondo rojo con transparencia: rgba(255,0,0,0.2)
//     - color de letra rojo
//     - margenes a todos los lados de 20px
//     - ning√∫n borde
//     - cursor de tipo pointer
// 4- Tenemos que agregar el bot√≥n en pantalla, adentro del div con la clase 'user', al final del mismo
// 5- El bot√≥n debe reaccionar cuando se le hace click
// 6- Mediante el click debe aparecer un cuadro de confirmaci√≥n que pregunte: "¬øSeguro desea cerrar sesi√≥n?"
// 7- Si el usuario acepta debe borrar todo el storage y redirigirlo a la pantalla de Login.
// Bonus track: al ingresar al sitio guardar la fecha y hora de ingreso. Al volver a ingresar, mostrar por console.log la √∫ltima fecha de ingreso
function botonCerrarSesion() {
    //    üëá desarrollar la funci√≥n
    if(location.href.includes('/usuario.html')) {

        let elementoUser = document.querySelector('div.user');

        elementoUser.innerHTML += `
            <button class="userbutton">Cerrar sesi√≥n</button>
            `;
    
        let cerrarSesionBtn = document.querySelector('.userbutton');
    
        cerrarSesionBtn.addEventListener('click', () => {
    
            let cierraSesion = confirm('¬øSeguro desea cerrar sesi√≥n?');
    
            if(cierraSesion) {
    
                localStorage.clear();
                sessionStorage.clear();
                location.href = '/index.html';
            }
        })

    }

}

window.addEventListener('load', () => {
    const usuario1 = recuperarDatosDelStorage();
    mostrarDatosUsuario(usuario1);
    let fechaIngreso = new Date();
    localStorage.setItem("ULTIMO_INGRESO", fechaIngreso);
    console.log(localStorage.getItem("ULTIMO_INGRESO"));
    botonCerrarSesion();

});
