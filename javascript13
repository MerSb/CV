/* -------------------------- estado por defecto ------------------------- */
const estadoUsuario = {
    email: "",
    password: "",
    rol: "",
    terminos: false
};

// ponemos en true solo cuando estén correctos
const estadoErroresOK = {
    email: false,
    password: false,
    rol: false,
    terminos: false
};


// Capturamos el evento del formulario

let email = document.querySelector('#email')
email.addEventListener('focusout', () => {
    estadoErroresOK.email = isValid("email",email.value);
    mostrasMensajesDeError("email");
})
    
let inputPassword = document.querySelector('#password');
document.querySelector('#password').addEventListener('focusout', () => {
    estadoErroresOK.password = isValid("password", inputPassword.value);
    mostrasMensajesDeError("password");
})
    
let inputRol = document.querySelector('#rol');
document.querySelector('#rol').addEventListener('focusout', () => {
    estadoErroresOK.rol = isValid("rol" ,inputRol.value);
    mostrasMensajesDeError("rol");
})
        
let inputTerminos = document.querySelector('#terminos');
document.querySelector('#terminos').addEventListener('focusout', () => {
    estadoErroresOK.terminos = isValid("terminos" ,inputTerminos.checked);
    mostrasMensajesDeError("terminos");
})


// Llamamos a la API


// Creamos las funciones que van a validar los datos
function isValid(nombrePropiedad, valorPropiedad){
    switch(nombrePropiedad){
        case "email":
            let regexEmail = new RegExp('[a-z0-9]+@[a-z]+\.[a-z]{2,3}');
            return regexEmail.test(valorPropiedad);
        case "password":
            return valorPropiedad.length > 3;
        case "rol":
            return valorPropiedad === 'frontend' || valorPropiedad === 'backend';
        case "terminos":
            return valorPropiedad === true;
    }
}

// Creamos la función que muestra los errores

function mostrasMensajesDeError(nombrePropiedad){
    for (propiedad in estadoErroresOK){
        if (nombrePropiedad == propiedad){
            if (estadoErroresOK[propiedad]){
                document.querySelector(`#${propiedad}Error`).classList.remove('visible')
            } else{
                document.querySelector(`#${propiedad}Error`).classList.add('visible')
            }
        break;
        }
    }
}
// function mostrasMensajesDeError(propiedad){
//     if (estadoErroresOK[propiedad]){
//         document.querySelector(`#${propiedad.toString()}Error`).classList.remove('visible')
//     } else{
//     document.querySelector(`#${propiedad.toString()}Error`).classList.add('visible')
//     }
// }


const inputEmail = document.querySelector('#email');
inputEmail.addEventListener('keypress', (e) => {
    const caractersInvalidos = [',', '!', '#'];
    const caractersInvalidos1 = ',!';
    if (caractersInvalidos.includes(e.key)) {
        // Prevenimos la continuación del evento y no se escribe la tecla oprimida
        e.preventDefault();
    }
});


/* ----------------------------- MESA DE TRABAJO ---------------------------- */
/* -------------------------------------------------------------------------- */
/*                [5] FUNCION: Formulario completado con éxito                */
/* -------------------------------------------------------------------------- */
// Esta funcion se va a encargar de realizar la redirección cuando el formulario se complete correctamente.
// Para eso debera cumplir con los siguientes requerimientos.
// 1 - Deshabilitar el boton del formulario.
// 2 - Esperar 3 segundos para redireccionar a la página 'usuario.html'
// 3 - Durante ese tiempo el boton deshabilitado debe mostrar el texto: "Cargando..."
// 4 - Cuando vaya a la página de 'usuario.html' NO se debe permitir que mediante el botón de "Atrás"(la flechita del navegador) el usuario vuelva a index.
// 5- Separar el evento 'change' del formulario en eventos individuales para cada elementos
// 6- Re-escribir de una manera mas resumida la función 'mostrasMensajesDeError()'

function navegarPaginaExito(){
    document.querySelector("form").addEventListener("submit", (e) => {
        e.preventDefault();
        cargando();
        setTimeout(redirigirPagina, 3000);
    })
}

function prevenirAtras(){
    window.history.back(1).disabled;
}

function redirigirPagina(){
    location.replace("usuario.html");
}

function cargando(){
    document.querySelector("button").innerHTML = "Cargando...";
}

navegarPaginaExito();
